// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: targeting_rules.sql

package sqlc

import (
	"context"

	"github.com/lib/pq"
)

const getTargetingRules = `-- name: GetTargetingRules :many
SELECT id, campaign_id, include_countries, exclude_countries, include_os, exclude_os, include_apps, exclude_apps FROM targeting_rules
`

func (q *Queries) GetTargetingRules(ctx context.Context) ([]TargetingRule, error) {
	rows, err := q.db.QueryContext(ctx, getTargetingRules)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []TargetingRule
	for rows.Next() {
		var i TargetingRule
		if err := rows.Scan(
			&i.ID,
			&i.CampaignID,
			pq.Array(&i.IncludeCountries),
			pq.Array(&i.ExcludeCountries),
			pq.Array(&i.IncludeOs),
			pq.Array(&i.ExcludeOs),
			pq.Array(&i.IncludeApps),
			pq.Array(&i.ExcludeApps),
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
